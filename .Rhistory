group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(mean=mean(count)) %>%
mutate(offset=lead(mean)-mean) %>%
filter(row_number()!=n()) %>%
pull(offset)
medians <- vel.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(median=median(count)) %>%
pull(median)
vel.hlines <- data.frame(
x=c(min(vel.hr$timestamp), breakout.ts),
xend=c(breakout.ts, max(vel.hr$timestamp)),
y=medians,
yend=medians)
vel.diff <- data.frame(
site=site,
type="velocity",
timestamp=breakout.ts,
offset=offsets)
} else {
vel.diff <- data.frame(
site=character(0),
type=character(0),
timestamp=as.POSIXct(character(0)),
offset=numeric(0))
}
out <- list()
out$tbl <- rbind(lvl.diff, vel.diff)
# plot -------
if(plot==T) {
# Gauge No
GN <- subset(r.ref, MANHOLE_ID==site)[,2]
# rainfall plot
if(!identical(GN,integer(0))){
rain.hr <- filter(r, GaugeNo==GN)
if(nrow(rain.hr)==0) rain.hr <- filter(r, GaugeNo==1)
} else {
rain.hr <- filter(r, GaugeNo==1)
}
rain.hr <-  rain.hr %>%
group_by(timestamp=cut(DateTime, 'hour')) %>%
summarise(depth=sum(Rainfall)) %>%
mutate(timestamp=as.POSIXct(timestamp))
rain.plot <- ggplot(rain.hr)+
geom_col(aes(x=timestamp, y=depth),color='black', fill='gray')+
scale_y_reverse() +
ylab('rainfall (in)')+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# level plot
lvl.plot <- ggplot(lvl.hr)+
geom_line(aes(x=timestamp, y=count), size=.1, color='black')+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("level (in)") +
coord_cartesian(xlim=date_limits)+
scale_x_datetime(breaks = pretty(date_limits,n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(lvl.hr$count, n = 10))+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(lvl.diff)){
lvl.plot <- lvl.plot +
# geom_vline(xintercept=lvl.diff$timestamp,
#            color='#F8766D')+
geom_segment(data=lvl.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=lvl.diff,
aes(x= timestamp,
y= max(lvl.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='white',
fill='#F8766D')
}
#velocity plot
vel.plot <- ggplot(vel.hr)+
geom_line(aes(x=timestamp, y=count), size=.1,color='black',alpha=0.6)+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("velocity (ft/s)") +
scale_x_datetime(breaks = pretty(date_limits, n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(vel.hr$count, n = 10)) +
coord_cartesian(xlim=date_limits)+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(vel.diff)){
vel.plot <- vel.plot +
# geom_vline(xintercept=vel.diff$timestamp,color='#00BFC4')+
geom_segment(data=vel.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=vel.diff,
aes(x= timestamp,
y= max(vel.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='white',
fill='#00BFC4')
}
out$rain.plot <- rain.plot
out$lvl.plot <- lvl.plot
out$vel.plot <- vel.plot
}
return(out)
}
# test case
site='IALL-0008'
plot=T
tst <- breakouts(site, plot)
tst$
tst$lvl.plot
tst$vel.plot
# function to download x months of vel and lvl data
breakouts <- function(site, plot=F){
# lvl ---------------
lvl.hr <- d %>%
filter(mhid==site & minute(dt)==0) %>%
transmute(timestamp=dt,
count=lvl)
lvl.breakouts <- breakout(
lvl.hr,
min.size = 240, # equals 10 days of data,
# i.e., the shift must last more than 10 days
method = 'multi',
degree=1,      # default
beta=0.008,    # default, but cannot be omitted
percent=0.10,
plot=F)
if(length(lvl.breakouts$loc)){
breakout.ts <- lvl.hr[lvl.breakouts$loc, "timestamp"]
offsets <- lvl.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(mean=mean(count)) %>%
mutate(offset=lead(mean)-mean) %>%
filter(row_number()!=n()) %>%
pull(offset)
medians <- lvl.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(median=median(count)) %>%
pull(median)
lvl.hlines <- data.frame(
x=c(min(lvl.hr$timestamp), breakout.ts),
xend=c(breakout.ts, max(lvl.hr$timestamp)),
y=medians,
yend=medians)
lvl.diff <- data.frame(
site=site,
type="level",
timestamp=breakout.ts,
offset=offsets)
} else {
lvl.diff <- data.frame(
site=character(0),
type=character(0),
timestamp=as.POSIXct(character(0)),
offset=numeric(0))
}
# vel ------
vel.hr <- d %>%
filter(mhid==site & minute(dt)==0) %>%
transmute(timestamp=dt,
count=vel)
vel.breakouts <-
breakout(vel.hr,
min.size = 240, # equals 10 days of data,
# i.e., the shift must last more than 10 days
method = 'multi',
degree=1,      # default
beta=0.008,    # default, but cannot be omitted
percent=0.10,
plot=F)
if(length(vel.breakouts$loc)){
breakout.ts <- vel.hr[vel.breakouts$loc, "timestamp"]
offsets <- vel.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(mean=mean(count)) %>%
mutate(offset=lead(mean)-mean) %>%
filter(row_number()!=n()) %>%
pull(offset)
medians <- vel.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(median=median(count)) %>%
pull(median)
vel.hlines <- data.frame(
x=c(min(vel.hr$timestamp), breakout.ts),
xend=c(breakout.ts, max(vel.hr$timestamp)),
y=medians,
yend=medians)
vel.diff <- data.frame(
site=site,
type="velocity",
timestamp=breakout.ts,
offset=offsets)
} else {
vel.diff <- data.frame(
site=character(0),
type=character(0),
timestamp=as.POSIXct(character(0)),
offset=numeric(0))
}
out <- list()
out$tbl <- rbind(lvl.diff, vel.diff)
# plot -------
if(plot==T) {
# Gauge No
GN <- subset(r.ref, MANHOLE_ID==site)[,2]
# rainfall plot
if(!identical(GN,integer(0))){
rain.hr <- filter(r, GaugeNo==GN)
if(nrow(rain.hr)==0) rain.hr <- filter(r, GaugeNo==1)
} else {
rain.hr <- filter(r, GaugeNo==1)
}
rain.hr <-  rain.hr %>%
group_by(timestamp=cut(DateTime, 'hour')) %>%
summarise(depth=sum(Rainfall)) %>%
mutate(timestamp=as.POSIXct(timestamp))
rain.plot <- ggplot(rain.hr)+
geom_col(aes(x=timestamp, y=depth),color='black', fill='gray')+
scale_y_reverse() +
ylab('rainfall (in)')+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# level plot
lvl.plot <- ggplot(lvl.hr)+
geom_line(aes(x=timestamp, y=count), size=.1, color='black')+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("level (in)") +
coord_cartesian(xlim=date_limits)+
scale_x_datetime(breaks = pretty(date_limits,n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(lvl.hr$count, n = 10))+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(lvl.diff)){
lvl.plot <- lvl.plot +
# geom_vline(xintercept=lvl.diff$timestamp,
#            color='#F8766D')+
geom_segment(data=lvl.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=lvl.diff,
aes(x= timestamp,
y= max(lvl.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='black')
}
#velocity plot
vel.plot <- ggplot(vel.hr)+
geom_line(aes(x=timestamp, y=count), size=.1,color='black',alpha=0.6)+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("velocity (ft/s)") +
scale_x_datetime(breaks = pretty(date_limits, n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(vel.hr$count, n = 10)) +
coord_cartesian(xlim=date_limits)+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(vel.diff)){
vel.plot <- vel.plot +
# geom_vline(xintercept=vel.diff$timestamp,color='#00BFC4')+
geom_segment(data=vel.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=vel.diff,
aes(x= timestamp,
y= max(vel.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='black')
}
out$rain.plot <- rain.plot
out$lvl.plot <- lvl.plot
out$vel.plot <- vel.plot
}
return(out)
}
# test case
site='IALL-0008'
plot=T
tst <- breakouts(site, plot)
tst$vel.plot
tst$lvl.plot
# function to download x months of vel and lvl data
breakouts <- function(site, plot=F){
# lvl ---------------
lvl.hr <- d %>%
filter(mhid==site & minute(dt)==0) %>%
transmute(timestamp=dt,
count=lvl)
lvl.breakouts <- breakout(
lvl.hr,
min.size = 240, # equals 10 days of data,
# i.e., the shift must last more than 10 days
method = 'multi',
degree=1,      # default
beta=0.008,    # default, but cannot be omitted
percent=0.10,
plot=F)
if(length(lvl.breakouts$loc)){
breakout.ts <- lvl.hr[lvl.breakouts$loc, "timestamp"]
offsets <- lvl.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(mean=mean(count)) %>%
mutate(offset=lead(mean)-mean) %>%
filter(row_number()!=n()) %>%
pull(offset)
medians <- lvl.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(median=median(count)) %>%
pull(median)
lvl.hlines <- data.frame(
x=c(min(lvl.hr$timestamp), breakout.ts),
xend=c(breakout.ts, max(lvl.hr$timestamp)),
y=medians,
yend=medians)
lvl.diff <- data.frame(
site=site,
type="level",
timestamp=breakout.ts,
offset=offsets)
} else {
lvl.diff <- data.frame(
site=character(0),
type=character(0),
timestamp=as.POSIXct(character(0)),
offset=numeric(0))
}
# vel ------
vel.hr <- d %>%
filter(mhid==site & minute(dt)==0) %>%
transmute(timestamp=dt,
count=vel)
vel.breakouts <-
breakout(vel.hr,
min.size = 240, # equals 10 days of data,
# i.e., the shift must last more than 10 days
method = 'multi',
degree=1,      # default
beta=0.008,    # default, but cannot be omitted
percent=0.10,
plot=F)
if(length(vel.breakouts$loc)){
breakout.ts <- vel.hr[vel.breakouts$loc, "timestamp"]
offsets <- vel.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(mean=mean(count)) %>%
mutate(offset=lead(mean)-mean) %>%
filter(row_number()!=n()) %>%
pull(offset)
medians <- vel.hr %>%
group_by(grp = findInterval(timestamp,
vec = breakout.ts,
rightmost.closed = T,
left.open = T)) %>%
summarise(median=median(count)) %>%
pull(median)
vel.hlines <- data.frame(
x=c(min(vel.hr$timestamp), breakout.ts),
xend=c(breakout.ts, max(vel.hr$timestamp)),
y=medians,
yend=medians)
vel.diff <- data.frame(
site=site,
type="velocity",
timestamp=breakout.ts,
offset=offsets)
} else {
vel.diff <- data.frame(
site=character(0),
type=character(0),
timestamp=as.POSIXct(character(0)),
offset=numeric(0))
}
out <- list()
out$tbl <- rbind(lvl.diff, vel.diff)
# plot -------
if(plot==T) {
# Gauge No
GN <- subset(r.ref, MANHOLE_ID==site)[,2]
# rainfall plot
if(!identical(GN,integer(0))){
rain.hr <- filter(r, GaugeNo==GN)
if(nrow(rain.hr)==0) rain.hr <- filter(r, GaugeNo==1)
} else {
rain.hr <- filter(r, GaugeNo==1)
}
rain.hr <-  rain.hr %>%
group_by(timestamp=cut(DateTime, 'hour')) %>%
summarise(depth=sum(Rainfall)) %>%
mutate(timestamp=as.POSIXct(timestamp))
rain.plot <- ggplot(rain.hr)+
geom_col(aes(x=timestamp, y=depth),color='black', fill='gray')+
scale_y_reverse() +
ylab('rainfall (in)')+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# level plot
lvl.plot <- ggplot(lvl.hr)+
geom_line(aes(x=timestamp, y=count), size=.1, color='black',alpha=0.4)+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("level (in)") +
coord_cartesian(xlim=date_limits)+
scale_x_datetime(breaks = pretty(date_limits,n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(lvl.hr$count, n = 10))+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(lvl.diff)){
lvl.plot <- lvl.plot +
# geom_vline(xintercept=lvl.diff$timestamp,
#            color='#F8766D')+
geom_segment(data=lvl.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=lvl.diff,
aes(x= timestamp,
y= max(lvl.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='black')
}
#velocity plot
vel.plot <- ggplot(vel.hr)+
geom_line(aes(x=timestamp, y=count), size=.1,color='black',alpha=0.6)+
# geom_smooth(aes(x=timestamp, y=count), color='grey44',
#             method = 'loess',span=0.3,
#             se = T)+
ylab("velocity (ft/s)") +
scale_x_datetime(breaks = pretty(date_limits, n=9), date_labels = "%b%d") +
scale_y_continuous(breaks = pretty(vel.hr$count, n = 10)) +
coord_cartesian(xlim=date_limits)+
theme_bw()+
theme(legend.position="none",
axis.title.x=element_blank())
# add annotation
if(nrow(vel.diff)){
vel.plot <- vel.plot +
# geom_vline(xintercept=vel.diff$timestamp,color='#00BFC4')+
geom_segment(data=vel.hlines, aes(x=x, xend=xend, y=y, yend=yend),
color='red', size=1, linetype='dashed') +
geom_label_repel(
data=vel.diff,
aes(x= timestamp,
y= max(vel.hr$count),
label= paste(round(offset, 2),'in \n',
format(timestamp,"%Y/%m/%d"))),
colour='black')
}
out$rain.plot <- rain.plot
out$lvl.plot <- lvl.plot
out$vel.plot <- vel.plot
}
return(out)
}
# test case
site='IALL-0008'
plot=T
tst <- breakouts(site, plot)
tst$lvl.plot
tst$vel.plot
source('~/Rprojects/FlowMon_drift/hydrograph.R', echo=TRUE)
source('~/Rprojects/FlowMon_drift/create_reports.R', echo=TRUE)
library("BreakoutDetection", lib.loc="C:/Program Files/R/library")
?breakout
