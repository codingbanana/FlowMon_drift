{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(lubridate)\nlibrary(RODBC)\nlibrary(breakpoint)\nlibrary(changepoint)\nlibrary(ggrepel)\nlibrary(BreakoutDetection)\n\nsite='F_06'\n# site='D_68'\n# site='D_09'\nn_month=6\nplot=T\n\ntelog.url <- 'Driver={SQL Server};SERVER=pwdfoxsql;UID=readonly;PWD=readonly;DATABASE=Telog'\nconn <- odbcDriverConnect(connection = telog.url)\nstart.date <- format(Sys.Date()-months(n_month),\"%Y%m%d\")\nquery <- paste0(\n    'SELECT t.trend_data_time AS t, t.trend_data_avg AS v, ',\n    'm.measurement_name AS type ',\n    'FROM sites s JOIN measurements m ON s.site_id=m.site_id ',\n    'JOIN trend_data t ON m.measurement_id=t.measurement_id ',\n    \"WHERE s.site_name ='\", site, \"' \",\n    \"AND measurement_name in ('TRUNK LEVEL', 'SWO LEVEL') \",\n    \"AND t.trend_data_time>='\", start.date, \"' \",\n    'ORDER BY s.site_name, t.trend_data_time'\n)\nres <- sqlQuery(conn, query)\nodbcClose(conn)\n\nif (!nrow(res)) {\n    out <- list(tbl=NA,\n                plot=NA)\n    return(out)\n}\n\nres.hr <- res %>%\n    filter(minute(t)==0)\n\np <- ggplot(res.hr) +\n    facet_grid(.~type) +\n    geom_point(aes(x=t, y=v, color=type), size=1)+\n    geom_smooth(aes(x=t, y=v), color='grey44',\n                method = 'gam',\n                formula = y ~ s(x, bs = \"cs\"),\n                se = T)+\n    ylab(\"water level (in)\") +\n    scale_x_datetime(date_breaks='1 month', date_labels = \"%b\") +\n    scale_y_continuous(breaks = pretty(res.hr$v, n = 10))+\n    ggtitle(site)+\n    theme_bw()+\n    theme(legend.position=\"none\",\n          axis.title.x=element_blank())\n\n# TRL ---------------\nTRL.hr <- res.hr %>%\n    filter(type=='TRUNK LEVEL')\n\n################################################\n##### breakpoint ######\nTRL.bp <- CE.Normal.MeanVar(dplyr::select(TRL.hr,v),\n                            Nmax=2,\n                            eps=0.1,\n                            rho=.2,\n                            M=240,\n                            h=24,\n                            a=1,\n                            b=1,\n                            distyp=1,\n                            penalty='BIC',\n                            parallel = T)\nloc <- TRL.bp$BP.Loc\n\n##### changepoint ######\nTRL.cpt <- cpt.meanvar(TRL.hr$v,\n                       penalty=\"MBIC\", # \"None\", \"SIC\", \"BIC\", \"MBIC\", AIC\",\n                                      # \"Hannan-Quinn\", \"Asymptotic\", \"Manual\", \"CROPS\"\n                       pen.value=0,\n                       method=\"AMOC\",     # \"AMOC\", \"PELT\", \"SegNeigh\" or \"BinSeg\".\n                       Q=5,\n                       test.stat=\"Normal\",\n                       class=TRUE,\n                       param.estimates=TRUE,\n                       shape=1,\n                       minseglen=2)\nloc <- attr(TRL.cpt, 'cpts')\n\n###### BreakOutDetection #########\nTRL.bod <- TRL.hr %>%\n    transmute(timestamp=t,\n              count=v) %>%\n    breakout(min.size = 240, # equals 10 days of data,\n             # i.e., the shift must last more than 10 days\n             method = 'multi',\n             degree=1,      # default\n             beta=0.008,    # default, but cannot be omitted\n             percent=0.10,\n             plot=F)\nloc <- TRL.bod$loc\n\n#################################################\n\nif(length(loc)){\n    # the actual breakouts happened 15 days before the detected breakout\n    # by observation only, may subject to change\n    breakout.ts <- TRL.hr[loc, \"t\"]\n    offsets <- TRL.hr %>%\n        group_by(grp = findInterval(t,\n                                    vec = breakout.ts,\n                                    rightmost.closed = T,\n                                    left.open = T)) %>%\n        summarise(mean=mean(v)) %>%\n        mutate(offset=lead(mean)-mean) %>%\n        filter(row_number()!=n()) %>%\n        pull(offset)\n\n    TRL.diff <- data.frame(\n        site=site,\n        type=\"TRUNK LEVEL\",\n        timestamp=breakout.ts,\n        offset=offsets)\n\n    p + geom_vline(aes(xintercept=timestamp, color=type),\n                   data=TRL.diff)+\n        geom_label_repel(\n            aes(x= timestamp,\n                y= max(res.hr$v),\n                fill=as.factor(type),\n                label= paste(round(offset, 2),'in \\n',\n                             format(timestamp,\"%Y/%m/%d\"))),\n            colour='white',\n            data=TRL.diff)+\n        scale_fill_manual(values=c(\"SWO LEVEL\"='#F8766D',\n                                   \"TRUNK LEVEL\"='#00BFC4'))\n} else {print(p)}\n",
    "created" : 1518799052413.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3083905555",
    "id" : "AC3FFFCA",
    "lastKnownWriteTime" : 1512488202,
    "last_content_update" : 1512488202,
    "path" : "~/Rprojects/Experiments/breakouts_pkgs_compare.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}