"0","# function to download x months of vel and lvl data"
"0","breakouts <- function(site, plot=F){"
"0","   # lvl ---------------"
"0","    lvl.hr <- d %>%  "
"0","        filter(mhid==site & minute(dt)==0) %>% "
"0","        transmute(timestamp=dt,"
"0","                  count=lvl) "
"0","    "
"0","    lvl.breakouts <- breakout("
"0","                 lvl.hr, "
"0","                 min.size = 240, # equals 10 days of data,"
"0","                                 # i.e., the shift must last more than 10 days"
"0","                 method = 'multi',"
"0","                 degree=1,      # default"
"0","                 beta=0.008,    # default, but cannot be omitted"
"0","                 percent=0.10,"
"0","                 plot=F)"
"0","    "
"0","    if(length(lvl.breakouts$loc)){"
"0","        breakout.ts <- lvl.hr[lvl.breakouts$loc, ""timestamp""]"
"0","        offsets <- lvl.hr %>%"
"0","            group_by(grp = findInterval(timestamp,"
"0","                                        vec = breakout.ts,"
"0","                                        rightmost.closed = T,"
"0","                                        left.open = T)) %>%"
"0","            summarise(mean=mean(count)) %>%"
"0","            mutate(offset=lead(mean)-mean) %>%"
"0","            filter(row_number()!=n()) %>%"
"0","            pull(offset)"
"0","        medians <- lvl.hr %>%"
"0","            group_by(grp = findInterval(timestamp,"
"0","                                        vec = breakout.ts,"
"0","                                        rightmost.closed = T,"
"0","                                        left.open = T)) %>%"
"0","            summarise(median=median(count)) %>% "
"0","            pull(median)"
"0","        "
"0","        lvl.hlines <- data.frame("
"0","            x=c(min(lvl.hr$timestamp), breakout.ts),"
"0","            xend=c(breakout.ts, max(lvl.hr$timestamp)),"
"0","            y=medians,"
"0","            yend=medians)"
"0","        "
"0","        lvl.diff <- data.frame("
"0","            site=site,"
"0","            type=""level"","
"0","            timestamp=breakout.ts,"
"0","            offset=offsets)"
"0","    } else {"
"0","        lvl.diff <- data.frame("
"0","            site=character(0),"
"0","            type=character(0),"
"0","            timestamp=as.POSIXct(character(0)),"
"0","            offset=numeric(0))"
"0","    }"
"0","    # vel ------"
"0","    vel.hr <- d %>%  "
"0","        filter(mhid==site & minute(dt)==0) %>% "
"0","        transmute(timestamp=dt,"
"0","                      count=vel)"
"0","    vel.breakouts <- "
"0","        breakout(vel.hr,"
"0","                 min.size = 240, # equals 10 days of data,"
"0","                                 # i.e., the shift must last more than 10 days"
"0","                 method = 'multi',"
"0","                 degree=1,      # default"
"0","                 beta=0.008,    # default, but cannot be omitted"
"0","                 percent=0.10,"
"0","                 plot=F)"
"0","    if(length(vel.breakouts$loc)){"
"0","        breakout.ts <- vel.hr[vel.breakouts$loc, ""timestamp""]"
"0","        offsets <- vel.hr %>%"
"0","            group_by(grp = findInterval(timestamp,"
"0","                                        vec = breakout.ts,"
"0","                                        rightmost.closed = T,"
"0","                                        left.open = T)) %>%"
"0","            summarise(mean=mean(count)) %>%"
"0","            mutate(offset=lead(mean)-mean) %>%"
"0","            filter(row_number()!=n()) %>%"
"0","            pull(offset)"
"0","        medians <- vel.hr %>%"
"0","            group_by(grp = findInterval(timestamp,"
"0","                                        vec = breakout.ts,"
"0","                                        rightmost.closed = T,"
"0","                                        left.open = T)) %>%"
"0","            summarise(median=median(count)) %>% "
"0","            pull(median)"
"0","        "
"0","        vel.hlines <- data.frame("
"0","            x=c(min(vel.hr$timestamp), breakout.ts),"
"0","            xend=c(breakout.ts, max(vel.hr$timestamp)),"
"0","            y=medians,"
"0","            yend=medians)"
"0","        "
"0","        vel.diff <- data.frame("
"0","            site=site,"
"0","            type=""velocity"","
"0","            timestamp=breakout.ts,"
"0","            offset=offsets)"
"0","    } else {"
"0","        vel.diff <- data.frame("
"0","            site=character(0),"
"0","            type=character(0),"
"0","            timestamp=as.POSIXct(character(0)),"
"0","            offset=numeric(0))"
"0","    }"
"0","    out <- list()"
"0","    out$tbl <- rbind(lvl.diff, vel.diff)"
"0","    "
"0","    # plot -------"
"0","    if(plot==T) {"
"0","        # Gauge No"
"0","        GN <- subset(r.ref, MANHOLE_ID==site)[,2]"
"0","        # rainfall plot"
"0","        if(!identical(GN,integer(0))){"
"0","            rain.hr <- filter(r, GaugeNo==GN)"
"0","            if(nrow(rain.hr)==0) rain.hr <- filter(r, GaugeNo==1)"
"0","        } else {"
"0","            rain.hr <- filter(r, GaugeNo==1)"
"0","        }"
"0","        "
"0","        rain.hr <-  rain.hr %>% "
"0","            group_by(timestamp=cut(DateTime, 'hour')) %>% "
"0","            summarise(depth=sum(Rainfall)) %>% "
"0","            mutate(timestamp=as.POSIXct(timestamp))"
"0","        "
"0","        rain.plot <- ggplot(rain.hr)+"
"0","            geom_col(aes(x=timestamp, y=depth),color='black', fill='gray')+"
"0","            scale_y_reverse() +"
"0","            ylab('rainfall (in)')+"
"0","            theme(axis.title.x=element_blank(),"
"0","                  axis.text.x=element_blank(),"
"0","                  axis.ticks.x=element_blank())"
"0","        "
"0","        # level plot"
"0","        lvl.plot <- ggplot(lvl.hr)+"
"0","            geom_line(aes(x=timestamp, y=count), size=.1, color='black',alpha=0.4)+"
"0","            # geom_smooth(aes(x=timestamp, y=count), color='grey44',"
"0","            #             method = 'loess',span=0.3,"
"0","            #             se = T)+"
"0","            ylab(""level (in)"") +"
"0","            coord_cartesian(xlim=date_limits)+    "
"0","            scale_x_datetime(breaks = pretty(date_limits,n=9), date_labels = ""%b%d"") +"
"0","            scale_y_continuous(breaks = pretty(lvl.hr$count, n = 10))+"
"0","            theme_bw()+"
"0","            theme(legend.position=""none"","
"0","                  axis.title.x=element_blank())"
"0","        # add annotation"
"0","        if(nrow(lvl.diff)){"
"0","            lvl.plot <- lvl.plot +"
"0","                # geom_vline(xintercept=lvl.diff$timestamp,"
"0","                #            color='#F8766D')+"
"0","                geom_segment(data=lvl.hlines, aes(x=x, xend=xend, y=y, yend=yend),"
"0","                           color='red', size=1, linetype='dashed') +"
"0","                geom_label_repel("
"0","                    data=lvl.diff,"
"0","                    aes(x= timestamp,"
"0","                        y= max(lvl.hr$count),"
"0","                        label= paste(round(offset, 2),'in \n', "
"0","                                    format(timestamp,""%Y/%m/%d""))),"
"0","                    colour='black')"
"0","        }"
"0","        "
"0","        #velocity plot"
"0","        vel.plot <- ggplot(vel.hr)+"
"0","            geom_line(aes(x=timestamp, y=count), size=.1,color='black',alpha=0.6)+"
"0","            # geom_smooth(aes(x=timestamp, y=count), color='grey44',"
"0","            #             method = 'loess',span=0.3,"
"0","            #             se = T)+"
"0","            ylab(""velocity (ft/s)"") +"
"0","            scale_x_datetime(breaks = pretty(date_limits, n=9), date_labels = ""%b%d"") +"
"0","            scale_y_continuous(breaks = pretty(vel.hr$count, n = 10)) +"
"0","            coord_cartesian(xlim=date_limits)+    "
"0","            theme_bw()+"
"0","            theme(legend.position=""none"","
"0","                  axis.title.x=element_blank())"
"0","        # add annotation"
"0","        if(nrow(vel.diff)){"
"0","            vel.plot <- vel.plot +"
"0","                # geom_vline(xintercept=vel.diff$timestamp,color='#00BFC4')+"
"0","                geom_segment(data=vel.hlines, aes(x=x, xend=xend, y=y, yend=yend),"
"0","                             color='red', size=1, linetype='dashed') +"
"0","                geom_label_repel("
"0","                    data=vel.diff,"
"0","                    aes(x= timestamp,"
"0","                        y= max(vel.hr$count),"
"0","                        label= paste(round(offset, 2),'in \n', "
"0","                                    format(timestamp,""%Y/%m/%d""))),"
"0","                    colour='black')"
"0","        }"
"0","        out$rain.plot <- rain.plot"
"0","        out$lvl.plot <- lvl.plot"
"0","        out$vel.plot <- vel.plot"
"0","    }"
"0","    "
"0","    return(out)"
"0","}"
"0","# test case"
"0","site='IALL-0008'"
"0","plot=T"
"0","tst <- breakouts(site, plot)"
